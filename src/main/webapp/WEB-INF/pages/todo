1. Commit messages and files in the commits are not connected.
	Commit messages should describe changes which happened in the files in the commit.
	Do not commit redundant files
!!!2. Exceptions
!!!3. Tests
4. Utils folder should named from the small letter
5. Constants and enums are not utils. Utils are the methods with some logic.
	They're like helper classes
6.  Enum Type unused
7. All public methods should be documented except for the getter/setter
!!!8. AssignmentServiceImpl.add().
	8a. Assignment a = new Assignment(); It's a bad case to call a var without meaning
	All vars should be named so they described what they store
	Assignment assignment = new Assignment();
	8b. Use converter like object mapper or dozer mapper instead of manual convertion.
		!!!For all the such cases
!!!9. AssignmentServiceImpl.generateEventsByAssId()
	Is it possible that Assignment has all three times?
	If it's possible then in the code below date event is overriden and only the time3 is set
			Event event = new Event();
                //если время было выбрано
                if (a.getTime1() != null) {
                    event.setDate(date.toString());
                    event.setTime(a.getTime1());
                }
                if (a.getTime2() != null) {
                    event.setDate(date.toString());
                    event.setTime(a.getTime2());
                }
                if (a.getTime3() != null) {
                    event.setDate(date.toString());
                    event.setTime(a.getTime3());
                }
	If it's impossible use if(){} else if()	{} else if(){}. Explain please why.
!!!10. Remove @Transactional from the mthods where it's redundant
!!!11. Clean all the project with ctrl+alt+L and commit it in one message
!!!12. EventServiceImpl.filter()
	12a. Why do you get all events
		List<Event> events = eventDAO.getAll();
		and then filter them in the DB?
		Think how to fix it
	12b. Use converter like object mapper or dozer mapper instead of manual convertion.
		!!!For all the such cases
13. Rename MyUserDetailService to AppUserDetailService. To use my words is not well
14. fixed All the strings and numbers which used everywhere in the project or got ont from db could
	be stored in the separated Constans file or enum. For example, for Patient statuses like "discharged"

	enum PatientStatus {
	  DISCHARGED,
	  ANOTHER_STATUS
	}

!!!15. PatientServiceImpl.update() You don't need to get the patient to update it.
	Think how to fix it
!!!16. fixed If you use lombok do not use toString(), Constructors and so on.
	Read the documentation about the lombok annotations you use and clean your models and dtos
!!!17. fixed Remove class Main from the model folder
18. fixed REmove all unused imports
!!!19. fixed Explain the method:
		    @Override
    public void add(Assignment assignment) {
        entityManager.persist(assignment);
        assignment = entityManager.find(Assignment.class, assignment.getId());
        entityManager.refresh(assignment);
    }
!!!20. fixed List<Event> getAll();
		Service can not return Entities
!!!21. fixed Rename the method commonCode() so it describe what  it does
!!!22. fixed Move this method from the controller
!!!23. fixed PatientController. getAll() Look at this method carefully and fix it

